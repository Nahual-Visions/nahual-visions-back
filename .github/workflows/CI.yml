# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Back CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '21.0.1'
        distribution: 'temurin'
        cache: maven
        
    - name: Test
      run: mvn -B clean package --file pom.xml
    
    - name: Upload Jar File
      uses: actions/upload-artifact@v4
      with:
          name: my-app
          path: target/*.jar
  
  prepare-environment:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Checkout into App Back
        uses: actions/checkout@v4

  deploy:
      runs-on: ubuntu-latest
      needs: [build, prepare-environment]
  
      steps:
        - name: Download JAR file
          uses: actions/download-artifact@v4
          with:
            name: my-app
  
        - name: Deploy to Server
          env:
            SERVER_IP: ${{ secrets.SERVER_IP }}
            SERVER_USER: ${{ secrets.SERVER_USER }} 
            SERVER_KEY: ${{ secrets.SERVER_KEY }} 
          run: |
            echo "$SERVER_KEY" > private_key.pem
            chmod 600 private_key.pem
            mkdir -p ~/.ssh
            ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts
            sudo apt-get install -y openssh-client
            ssh -i private_key.pem $SERVER_USER@$SERVER_IP "mkdir -p ~/actions-runner/_work/nahual-visions-back/nahual-visions-back"
            scp -i private_key.pem *.jar $SERVER_USER@$SERVER_IP:~/actions-runner/_work/nahual-visions-back/nahual-visions-back
  
  start:
    runs-on: self-hosted
    if: ${{ github.event.pull_request.merged }} 
    needs: deploy
    steps:
      - name: Up other services
        env:
          DOCKER_BUILDKIT: 0
          
          MONGO_INITDB_ROOT_USERNAME: ${{ secrets.USER }}
          MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.PASSWORD }}
          
          ME_CONFIG_MONGODB_SERVER: ${{ secrets.MG_SERVER }}
          ME_CONFIG_MONGODB_ADMINUSERNAME: ${{ secrets.USER }}
          ME_CONFIG_MONGODB_ADMINPASSWORD: ${{ secrets.PASSWORD }}
          
          PGADMIN_DEFAULT_EMAIL: ${{ secrets.PG_EMAIL }}
          PGADMIN_DEFAULT_PASSWORD:  ${{ secrets.USER }}
          
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.USER }} 
          POSTGRES_PASSWORD: ${{ secrets.PASSWORD }} 
          
          
          KC_DB_URL: ${{ secrets.DB_URL }}
          KC_DB_USERNAME: ${{ secrets.USER }}
          KC_DB_PASSWORD: ${{ secrets.PASSWORD }}
          KC_BOOTSTRAP_ADMIN_USERNAME: ${{ secrets.ADMIN }}
          KC_BOOTSTRAP_ADMIN_PASSWORD: ${{ secrets.ADMIN }}
        run: |
          docker compose up -d --scale back=0

      - name: Recreate backend service
        env:
          DOCKER_BUILDKIT: 0
        
          DB_URL: ${{ secrets.DB_URL }}
          JWK_SET_URI: ${{ secrets.JWK_SET_URI }}
          ISSUER_URI: ${{ secrets.ISSUER_URI }}
          MG_URI: ${{ secrets.MG_URI }}
          API_KEY: ${{ secrets.API_KEY }}
          USER: ${{ secrets.USER }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: | 
          docker compose up -d --force-recreate --no-deps back
